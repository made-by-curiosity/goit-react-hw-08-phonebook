{"version":3,"file":"static/js/102.a7237afb.chunk.js","mappings":"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","sources":["components/MainForm/MainForm.styled.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  padding-top: 50px;\n`;\n\nexport const FromTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const MainForm = styled.form`\n  width: 500px;\n  margin: 0 auto;\n  padding: 30px 50px 50px;\n\n  display: flex;\n  flex-direction: column;\n\n  gap: 10px;\n\n  background-color: rgb(35, 48, 68);\n\n  border-radius: 4px;\n`;\n\nexport const MainInput = styled.input`\n  width: 100%;\n  min-width: 0px;\n  margin: 0px;\n  padding: 10px 13px;\n\n  display: block;\n\n  font: inherit;\n  letter-spacing: inherit;\n  color: currentcolor;\n  border: 1px solid;\n  border-radius: 4px;\n\n  border-color: ${({ errors }) => (errors ? 'red' : 'gray')};\n\n  background: none;\n  outline: none;\n`;\n\nexport const MainButton = styled.button`\n  margin-top: 16px;\n  padding: 10px 20px;\n\n  display: inline-block;\n  min-width: 100px;\n\n  color: currentColor;\n  border-radius: 4px;\n  transition: background-color 300ms ease-out, color 100ms ease-out;\n\n  background-color: rgb(64, 122, 214);\n\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(44, 85, 149);\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n  }\n\n  &:active {\n    background-color: rgba(44, 85, 149, 0.5);\n  }\n\n  &:disabled {\n    background-color: rgba(44, 85, 149, 0.3);\n\n    color: #d5d5d5;\n\n    &:hover {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  color: rgba(255, 0, 0, 0.9);\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  min-width: 250px;\n  padding: 10px 20px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  letter-spacing: 0.01071em;\n  color: rgba(255, 255, 255, 0.8);\n\n  border-radius: 4px;\n\n  background-color: rgb(18, 18, 18);\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  background-image: linear-gradient(\n    rgba(255, 255, 255, 0.04),\n    rgba(255, 255, 255, 0.04)\n  );\n\n  transform: scale(1);\n\n  transition: transform 200ms ease-out;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  flex-grow: 1;\n  margin: 0 auto;\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 40px;\n  height: 40px;\n\n  padding: 2px;\n  margin-left: auto;\n\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 12px;\n\n  background-color: transparent;\n\n  border-radius: 50%;\n  transition: background-color 300ms ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n\n  & svg {\n    width: 20px;\n    height: 20px;\n\n    fill: rgb(178, 34, 34);\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactItem, DeleteBtn } from './ContactList.styled';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { MdDelete } from 'react-icons/md';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  // чтобы контакты вверху добавлялись\n  const filteredContacts = filterContacts().reverse();\n\n  return (\n    <>\n      {isLoading && !error && <div>Loading...</div>}\n      {error && !isLoading && (\n        <div>Sorry, something went wrong. Try again later</div>\n      )}\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id}>\n              <div>\n                <p>{name}: </p> <p>{number}</p>\n              </div>\n              <DeleteBtn\n                onClick={() => {\n                  handleDelete(id);\n                }}\n              >\n                <MdDelete />\n              </DeleteBtn>\n            </ContactItem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { MainInput } from 'components/MainForm/MainForm.styled';\n\nexport const ContactsFilter = styled.div`\n  & > p {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FilterInput = styled(MainInput)`\n  margin-bottom: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactsFilter, FilterInput } from './Filter.styled';\nimport { updateFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const Filter = ({ filterTitle }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n\n  return (\n    <ContactsFilter>\n      {filterTitle && <p>{filterTitle}</p>}\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onInput={handleFilter}\n        autoFocus\n      />\n    </ContactsFilter>\n  );\n};\n\nFilter.propTypes = {\n  filterTitle: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const PhonebookSection = styled.div`\n  & > h2 {\n    margin-bottom: 15px;\n    text-align: center;\n  }\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  gap: 80px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PhonebookSection } from './Section.styled';\n\nexport const Section = ({ sectionTitle, children }) => {\n  return (\n    <PhonebookSection>\n      {sectionTitle && <h2>{sectionTitle}</h2>}\n      {children}\n    </PhonebookSection>\n  );\n};\n\nSection.propTypes = {\n  titleText: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\nimport { MainButton, MainForm } from 'components/MainForm/MainForm.styled';\n\nexport const PhonebookForm = styled(MainForm)`\n  margin-left: 0;\n`;\n\nexport const AddButton = styled(MainButton)`\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { AddButton, PhonebookForm } from './Form.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { ErrorMessage, MainInput } from 'components/MainForm/MainForm.styled';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n    reset,\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n    mode: 'onChange',\n  });\n\n  const onSubmit = newContactValues => {\n    const hasContact = contacts.find(\n      contact => newContactValues.name === contact.name\n    );\n\n    if (hasContact) {\n      alert(`${newContactValues.name} is already in contacts`);\n\n      return;\n    }\n\n    dispatch(addContact(newContactValues));\n  };\n\n  return (\n    <PhonebookForm\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n        reset();\n      })}\n    >\n      <label htmlFor=\"name\">\n        <p>Name</p>\n        <MainInput\n          {...register('name', {\n            required: 'Name is required',\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              message: 'Name must contain only letters',\n            },\n            maxLength: {\n              value: 20,\n              message: \"Name shouldn't be longer than 20 characters\",\n            },\n          })}\n          type=\"text\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          errors={errors.name}\n          autoComplete=\"off\"\n        />\n      </label>\n      <ErrorMessage>{errors?.name?.message}</ErrorMessage>\n\n      <label htmlFor=\"number\">\n        <p>Number</p>\n        <MainInput\n          {...register('number', {\n            required: 'Number is required',\n            pattern: {\n              value:\n                /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}?$/,\n              message: 'Invalid phone number',\n            },\n            maxLength: {\n              value: 20,\n              message: \"Phone shouldn't be longer than 20 characters\",\n            },\n          })}\n          type=\"tel\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          errors={errors.number}\n          autoComplete=\"off\"\n        />\n      </label>\n      <ErrorMessage>{errors?.number?.message}</ErrorMessage>\n      <AddButton type=\"submit\" disabled={!isValid}>\n        Add Contact\n      </AddButton>\n    </PhonebookForm>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { Form } from 'components/Form/Form';\nimport { SectionWrapper } from 'components/Section/Section.styled';\n\nconst Contacts = () => {\n  return (\n    <Container titleText=\"Phonebook\">\n      <SectionWrapper>\n        <Section>\n          <Form />\n        </Section>\n        <Section sectionTitle=\"Contacts\">\n          <Filter filterTitle=\"Find contacts by name\" />\n          <ContactList />\n        </Section>\n      </SectionWrapper>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormWrapper","styled","FromTitle","MainForm","MainInput","errors","MainButton","ErrorMessage","ContactItem","DeleteBtn","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactList","dispatch","useDispatch","useSelector","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","contact","name","includes","filterContacts","reverse","map","id","number","onClick","contactId","deleteContact","ContactsFilter","FilterInput","Filter","filterTitle","type","value","onInput","e","updateFilter","target","autoFocus","PhonebookSection","SectionWrapper","Section","sectionTitle","children","PhonebookForm","AddButton","Form","useForm","defaultValues","mode","register","handleSubmit","formState","isValid","reset","onSubmit","data","newContactValues","find","alert","addContact","htmlFor","required","pattern","message","maxLength","title","autoComplete","disabled","Container","titleText"],"sourceRoot":""}